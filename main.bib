@article{10.1145/3214304,
    author = {Liu, Ming and Xue, Zhi and Xu, Xianghua and Zhong, Changmin and
              Chen, Jinjun},
    title = {Host-Based Intrusion Detection System with System Calls: Review and
             Future Trends},
    year = {2018},
    issue_date = {September 2019},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {51},
    number = {5},
    issn = {0360-0300},
    url = {https://doi.org/10.1145/3214304},
    doi = {10.1145/3214304},
    abstract = {In a contemporary data center, Linux applications often generate
                a large quantity of real-time system call traces, which are not
                suitable for traditional host-based intrusion detection systems
                deployed on every single host. Training data mining models with
                system calls on a single host that has static computing and
                storage capacity is time-consuming, and intermediate datasets are
                not capable of being efficiently handled. It is cumbersome for
                the maintenance and updating of host-based intrusion detection
                systems (HIDS) installed on every physical or virtual host, and
                comprehensive system call analysis can hardly be performed to
                detect complex and distributed attacks among multiple hosts.
                Considering these limitations of current system-call-based HIDS,
                in this article, we provide a review of the development of
                system-call-based HIDS and future research trends. Algorithms and
                techniques relevant to system-call-based HIDS are investigated,
                including feature extraction methods and various data mining
                algorithms. The HIDS dataset issues are discussed, including
                currently available datasets with system calls and approaches for
                researchers to generate new datasets. The application of
                system-call-based HIDS on current embedded systems is studied,
                and related works are investigated. Finally, future research
                trends are forecast regarding three aspects, namely, the
                reduction of the false-positive rate, the improvement of
                detection efficiency, and the enhancement of collaborative
                security.},
    journal = {ACM Comput. Surv.},
    month = nov,
    articleno = {98},
    numpages = {36},
    keywords = {Cybersecurity, big data, cloud computing, intrusion detection,
                system call},
}

@misc{rustbook_unsafe,
    author = {{The Rust Project Developers}},
    title = {The Rust Programming Language: Unsafe Rust},
    year = { 2025 },
    url = {https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html},
    note = {Accessed: 2025-03-31},
}

@inproceedings{SOK,
    title = {SoK: Software Compartmentalization},
    author = {Lefeuvre, Hugo and Dautenhahn, Nathan and Chisnall, David and
              Olivier, Pierre},
    booktitle = {46th IEEE Symposium on Security and Privacy (S\&P'25)},
    year = {2024},
}

@inproceedings{ANDROID_SOK,
    author = {Acar, Yasemin and Backes, Michael and Bugiel, Sven and Fahl,
              Sascha and McDaniel, Patrick and Smith, Matthew},
    booktitle = {Proceedings of the 2016 IEEE Symposium on Security and Privacy},
    title = {{SoK}: Lessons Learned from {Android} Security Research for
             Appified Software Platforms},
    year = {2016},
    series = {S\&P'16},
    doi = {10.1109/SP.2016.33},
    file = {:papers/Acar2016.pdf:PDF},
    groups = {SoKs, Isolation},
}

@inproceedings{PRIVMAN,
    author = {Kilpatrick, Douglas},
    booktitle = {Proc. of the 2003 {USENIX} Annual Technical Conference},
    title = {Privman: A Library for Partitioning Applications.},
    series = {ATC'03},
    file = {:papers/Kilpatrick2003.pdf:PDF},
    groups = {App Isolation, Isolation},
}

@incollection{CONFFUZZ,
    title = {Assessing the Impact of Interface Vulnerabilities in
             Compartmentalized Software},
    author = {Lefeuvre, Hugo and B{\u{a}}doiu, Vlad-Andrei and Chien, Yi and
              Huici, Felipe and Dautenhahn, Nathan and Olivier, Pierre},
    booktitle = {Proceedings of 30th Network and Distributed System Security
                 (NDSS'23)},
    year = {2022},
    publisher = {Internet Society},
}

@inproceedings{MPK,
    title = {libmpk: Software abstraction for intel memory protection keys
             (intel MPK)},
    author = {Park, Soyeon and Lee, Sangho and Xu, Wen and Moon, Hyungon and Kim
              , Taesoo},
    booktitle = {2019 USENIX Annual Technical Conference (USENIX ATC 19)},
    pages = {241--254},
    year = {2019},
}


@book{UNDERSTANDING_LINUX_KERNEL,
    title = {Understanding the Linux Kernel},
    author = {Bovet, Daniel P. and Cesati, Marco},
    year = {2005},
    publisher = {O'Reilly Media},
    edition = {3rd},
    isbn = {9780596005658},
}

@online{LEARNING_EBPF,
    author = {Liz Rice},
    title = {Learning eBPF: Programming the Linux Kernel for Observability,
             Security, and Networking},
    year = {2023},
    publisher = {O'Reilly Media},
    url = {
           https://learning.oreilly.com/library/view/learning-ebpf/9781098135119/ch01.html#ebpfapostrophes_roots_the_berkeley_pack
           },
    note = {Accessed via O'Reilly Online Learning},
}

@inproceedings{SIDECAR,
    title = {Design patterns for container-based distributed systems},
    author = {Burns, Brendan and Oppenheimer, David},
    booktitle = {8th USENIX Workshop on Hot Topics in Cloud Computing (HotCloud
                 16)},
    year = {2016},
}


@misc{bpf_kfuncs_docs,
    author = {{The Linux Kernel Developers}},
    title = {BPF Kernel Functions (kfuncs) - The Linux Kernel Documentation},
    year = 2025,
    url = {https://docs.kernel.org/bpf/kfuncs.html},
    note = {Accessed: 2025-03-31},
}


@misc{BPF_PACKET_MITIGATION,
    author = {{Tigera, Inc.}},
    title = {{eBPF and XDP Explained}},
    howpublished = {\url{https://www.tigera.io/learn/guides/ebpf/ebpf-xdp/}},
    year = {2024},
    month = {October},
    note = {Accessed: 2025-03-31},
}


@inproceedings{SPECTRE_BPF_MITIGATION,
    series = {RAID ’24},
    title = {VeriFence: Lightweight and Precise Spectre Defenses for Untrusted
             Linux Kernel Extensions},
    url = {http://dx.doi.org/10.1145/3678890.3678907},
    DOI = {10.1145/3678890.3678907},
    booktitle = {The 27th International Symposium on Research in Attacks,
                 Intrusions and Defenses},
    publisher = {ACM},
    author = {Gerhorst, Luis and Herzog, Henriette and Wägemann, Peter and Ott,
              Maximilian and Kapitza, Rüdiger and Hönig, Timo},
    year = {2024},
    month = sep,
    pages = {644–659},
    collection = {RAID ’24},
}

@online{BPF_LOOP_COMMIT,
    author = {The Linux Kernel Community},
    title = {bpf: Add bpf\_loop helper},
    year = {2024},
    month = {3},
    day = {12},
    url = {
           https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=e6f2dd0f80674e9d5960337b3e9c2a242441b326
           },
    urldate = {2025-03-31},
    note = {Commit e6f2dd0, Linux kernel Git repository},
}

@online{BPF_VERIFIER_EXPLOIT,
    author = {Google Bug Hunters},
    title = {A Deep Dive into CVE-2023-2163: How We Found and Fixed an eBPF
             Linux Kernel Vulnerability},
    date = {2024-09-15},
    url = {
           https://bughunters.google.com/blog/6303226026131456/a-deep-dive-into-cve-2023-2163-how-we-found-and-fixed-an-ebpf-linux-kernel-vulnerability
           },
    urldate = {2025-03-31},
}


@book{LINUX_NETWORKING_OBSERVABILITY,
    title = {Linux Observability with BPF: Advanced Programming for Performance
             Analysis and Networking},
    author = {Calavera, D. and Fontana, L.},
    isbn = {9781492050179},
    lccn = {2020276779},
    url = {https://books.google.co.uk/books?id=jtS-DwAAQBAJ},
    year = {2019},
    publisher = {O'Reilly Media},
}


@online{CILIUM_BPF_XDP_INTRO,
    title = {Introduction — Cilium 1.18.0-dev documentation},
    author = {{Cilium Authors}},
    year = {2024},
    url = {https://docs.cilium.io/en/latest/network/ebpf/intro/},
    note = {Accessed: 2025-04-02},
}


@online{GREGG_BPF_NOT_SECURITY,
    title = {eBPF Observability Tools Are Not Security Tools},
    author = {Brendan Gregg},
    year = {2023},
    month = apr,
    url = {
           https://www.brendangregg.com/blog/2023-04-28/ebpf-security-issues.html
           },
    note = {Accessed: 2025-04-02},
}


@unpublished{StarovoitovBPFSecurity,
    author = {Starovoitov, Alexei},
    title = {BPF and Security. Friends and Foes},
    year = {2024},
    note = {Talk presented at the Linux Security Foundation Conference, Location
            },
    url = {https://www.youtube.com/watch?v=kvt4wdXEuRU},
}

@misc{seccompBPF,
    author = {{The Linux Kernel Team}},
    title = {{Seccomp BPF (SECure COMPuting with filters) — The Linux Kernel
             Documentation}},
    year = {2019},
    howpublished = {\url{
                    https://www.kernel.org/doc/html/v5.0/userspace-api/seccomp_filter.html
                    }},
    note = {Accessed: 2025-04-02},
}


@misc{arcangeli_seccomp_2005,
    author = {Andrea Arcangeli and Andrew Morton and Linus Torvalds},
    title = {[PATCH] seccomp: secure computing support},
    year = 2005,
    note = {Commit message. Accessed: 2025-03-31},
    url = {
           https://archive.ph/20130415050745/http://git.kernel.org/?p=linux/kernel/git/tglx/history.git;a=commit;h=d949d0ec9c601f2b148bed3cdb5f87c052968554
           },
}

@article{GRID_COMPUTING_INTRO,
    title = {Introduction to grid computing},
    author = {Jacob, Bart and Brown, Michael and Fukui, Kentaro and Trivedi,
              Nihar and others},
    journal = {IBM redbooks},
    pages = {3--6},
    year = {2005},
    publisher = {Citeseer},
}


@misc{MAN_PAGES_SECCOMP,
    author = {{Michael Kerrisk}},
    title = {{seccomp(2) — operate on Secure Computing state of the process}},
    howpublished = {\url{https://man7.org/linux/man-pages/man2/seccomp.2.html}},
    note = {Linux manual page},
    year = {2024},
    accessed = {2025-04-02},
}


@online{TORVALDS_ANYONE_USES_SECCOMP,
    author = {Linus Torvalds},
    title = {Re: [PATCH 2/2] x86-64: seccomp: fix 32/64 syscall hole},
    year = {2009},
    month = feb,
    day = {28},
    url = {https://lkml.org/lkml/2009/2/28/129},
    note = {Posted to the Linux Kernel Mailing List (LKML)},
}


@online{android_seccomp_oreo,
    author = {{Android Developers}},
    title = {Seccomp filter in Android O},
    year = {2017},
    url = {
           https://android-developers.googleblog.com/2017/07/seccomp-filter-in-android-o.html
           },
    note = {Accessed: 2025-04-02},
}


@online{docker_seccomp,
    author = {{Docker Documentation}},
    title = {Runtime security with seccomp},
    year = {2023},
    url = {https://docs.docker.com/engine/security/seccomp/},
    note = {Accessed: 2025-04-02},
}


@online{firefox_seccomp,
    author = {Guillaume Destuynder},
    title = {Firefox Seccomp sandbox},
    year = {2012},
    url = {https://wiki.mozilla.org/Security/Sandbox/Seccomp},
    note = {Accessed: 2025-04-02},
}


@book{LINUX_PROGRAMMING_INTERFACE,
    author = {Michael Kerrisk},
    title = {The Linux Programming Interface: A Linux and UNIX System
             Programming Handbook},
    year = {2010},
    publisher = {No Starch Press},
    location = {San Francisco},
    isbn = {9781593272203},
}
